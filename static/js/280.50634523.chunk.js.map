{"version":3,"file":"static/js/280.50634523.chunk.js","mappings":"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","sources":["utils/clipboardUtils.ts","pages/MachineDetail.tsx","utils/dateUtils.ts","services/anydesk.service.ts","components/AnydeskLaunchButton.tsx"],"sourcesContent":["/**\r\n * Utility functions for clipboard operations\r\n * Handles copying text to clipboard with proper error handling and user feedback\r\n */\r\n\r\n/**\r\n * Copies text to clipboard with fallback for older browsers\r\n * @param text - The text to copy to clipboard\r\n * @returns Promise<boolean> - True if successful, false if failed\r\n */\r\nexport const copyToClipboard = async (text: string): Promise<boolean> => {\r\n  try {\r\n    // Modern clipboard API (preferred)\r\n    if (navigator.clipboard && window.isSecureContext) {\r\n      await navigator.clipboard.writeText(text);\r\n      return true;\r\n    }\r\n    \r\n    // Fallback for older browsers or non-secure contexts\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = text;\r\n    textArea.style.position = 'fixed';\r\n    textArea.style.left = '-999999px';\r\n    textArea.style.top = '-999999px';\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n    \r\n    const successful = document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n    \r\n    return successful;\r\n  } catch (error) {\r\n    console.error('Failed to copy to clipboard:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Shows a temporary toast notification for copy feedback\r\n * @param message - The message to display\r\n * @param isSuccess - Whether the operation was successful\r\n */\r\nexport const showCopyFeedback = (message: string, isSuccess: boolean = true): void => {\r\n  // Create toast element\r\n  const toast = document.createElement('div');\r\n  toast.className = `copy-feedback ${isSuccess ? 'success' : 'error'}`;\r\n  toast.textContent = message;\r\n  \r\n  // Style the toast\r\n  Object.assign(toast.style, {\r\n    position: 'fixed',\r\n    top: '20px',\r\n    right: '20px',\r\n    padding: '12px 20px',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n    fontWeight: '600',\r\n    fontSize: '14px',\r\n    zIndex: '10000',\r\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',\r\n    transform: 'translateX(100%)',\r\n    transition: 'transform 0.3s ease-in-out',\r\n    backgroundColor: isSuccess ? '#10b981' : '#ef4444',\r\n    maxWidth: '300px',\r\n    wordWrap: 'break-word'\r\n  });\r\n  \r\n  document.body.appendChild(toast);\r\n  \r\n  // Animate in\r\n  setTimeout(() => {\r\n    toast.style.transform = 'translateX(0)';\r\n  }, 10);\r\n  \r\n  // Remove after 3 seconds\r\n  setTimeout(() => {\r\n    toast.style.transform = 'translateX(100%)';\r\n    setTimeout(() => {\r\n      if (document.body.contains(toast)) {\r\n        document.body.removeChild(toast);\r\n      }\r\n    }, 300);\r\n  }, 3000);\r\n};\r\n\r\n/**\r\n * Copies text to clipboard and shows user feedback\r\n * @param text - The text to copy\r\n * @param successMessage - Message to show on success\r\n * @param errorMessage - Message to show on error\r\n */\r\nexport const copyWithFeedback = async (\r\n  text: string, \r\n  successMessage: string = 'Copied to clipboard!',\r\n  errorMessage: string = 'Failed to copy to clipboard'\r\n): Promise<void> => {\r\n  const success = await copyToClipboard(text);\r\n  showCopyFeedback(success ? successMessage : errorMessage, success);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { Machine, AnyDeskLaunchResult } from '../types/machine.types';\r\nimport { indexedDBService } from '../services/indexedDB.service';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport AnydeskLaunchButton from '../components/AnydeskLaunchButton';\r\nimport { formatDate } from '../utils/dateUtils';\r\nimport { copyWithFeedback } from '../utils/clipboardUtils';\r\nimport './MachineDetail.css';\r\n\r\n// Password item component with show/hide functionality\r\nconst PasswordItem: React.FC<{ password: string; index: number }> = ({ password, index }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  return (\r\n    <div className=\"password-item\">\r\n      <span className=\"password-value\">\r\n        {isVisible ? password : '*'.repeat(password.length)}\r\n      </span>\r\n      <button \r\n        className=\"btn btn-sm\"\r\n        onClick={() => setIsVisible(!isVisible)}\r\n      >\r\n        {isVisible ? 'Hide' : 'Show'}\r\n      </button>\r\n      <button \r\n        className=\"btn btn-sm btn-secondary\"\r\n        onClick={() => copyWithFeedback(password, 'Password copied to clipboard!')}\r\n        title=\"Copy password\"\r\n      >\r\n        📋 Copy\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MachineDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [machine, setMachine] = useState<Machine | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadMachine(id);\r\n    }\r\n  }, [id]);\r\n\r\n  const loadMachine = async (machineId: string) => {\r\n    try {\r\n      setLoading(true);\r\n      const machineData = await indexedDBService.getMachine(machineId);\r\n      if (machineData) {\r\n        setMachine(machineData);\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load machine:', error);\r\n      navigate('/');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!machine || !window.confirm('Are you sure you want to delete this machine?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await indexedDBService.deleteMachine(machine.id);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Failed to delete machine:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"page-loading\">\r\n        <LoadingSpinner size=\"lg\" />\r\n        <p>Loading machine details...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!machine) {\r\n    return (\r\n      <div className=\"page-error\">\r\n        <h2>Machine not found</h2>\r\n        <Link to=\"/\" className=\"btn btn-primary\">Back to Dashboard</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"machine-detail\">\r\n      <div className=\"page-header\">\r\n        <Link to=\"/\" className=\"btn btn-secondary\">\r\n          ← Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"page-title\">{machine.name}</h1>\r\n      </div>\r\n\r\n      <div className=\"machine-info\">\r\n        <div className=\"info-section\">\r\n          <h3>Basic Information</h3>\r\n          <div className=\"info-grid\">\r\n            <div className=\"info-item\">\r\n              <label>Machine ID</label>\r\n              <span className=\"machine-id\">{machine.id}</span>\r\n              <button\r\n                className=\"btn btn-secondary btn-sm copy-btn\"\r\n                onClick={() => copyWithFeedback(machine.id, 'Machine ID copied to clipboard!')}\r\n                title=\"Copy Machine ID\"\r\n              >\r\n                📋 Copy ID\r\n              </button>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>AnyDesk ID</label>\r\n              <span className=\"anydesk-id\">{machine.anydeskId}</span>\r\n              <button\r\n                className=\"btn btn-secondary btn-sm copy-btn\"\r\n                onClick={() => copyWithFeedback(machine.anydeskId, 'AnyDesk ID copied to clipboard!')}\r\n                title=\"Copy AnyDesk ID\"\r\n              >\r\n                📋 Copy ID\r\n              </button>\r\n              <AnydeskLaunchButton\r\n                machineId={machine.id}\r\n                machineName={machine.name}\r\n                anydeskId={machine.anydeskId}\r\n                size=\"sm\"\r\n                variant=\"primary\"\r\n              />\r\n            </div>\r\n            {machine.address && (\r\n              <div className=\"info-item\">\r\n                <label>Address</label>\r\n                <span>{machine.address}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"info-item\">\r\n              <label>Created</label>\r\n              <span>{formatDate(machine.createdAt)}</span>\r\n            </div>\r\n            {machine.lastAccessed && (\r\n              <div className=\"info-item\">\r\n                <label>Last Accessed</label>\r\n                <span>{formatDate(machine.lastAccessed)}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"info-item\">\r\n              <label>Connections</label>\r\n              <span>{machine.connectionCount} times</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {machine.notes && (\r\n          <div className=\"info-section\">\r\n            <h3>Notes</h3>\r\n            <p className=\"notes\">{machine.notes}</p>\r\n          </div>\r\n        )}\r\n\r\n        {machine.passwords.length > 0 && (\r\n          <div className=\"info-section\">\r\n            <h3>Passwords</h3>\r\n            <div className=\"password-list\">\r\n              {machine.passwords.map((password, index) => (\r\n                <PasswordItem key={index} password={password} index={index} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {machine.tags.length > 0 && (\r\n          <div className=\"info-section\">\r\n            <h3>Tags</h3>\r\n            <div className=\"tags-list\">\r\n              {machine.tags.map((tag, index) => (\r\n                <span key={index} className=\"tag\">{tag}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {machine.categories.length > 0 && (\r\n          <div className=\"info-section\">\r\n            <h3>Categories</h3>\r\n            <div className=\"categories-list\">\r\n              {machine.categories.map((category, index) => (\r\n                <span key={index} className=\"category\">{category}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"page-actions\">\r\n        <AnydeskLaunchButton\r\n          machineId={machine.id}\r\n          machineName={machine.name}\r\n          anydeskId={machine.anydeskId}\r\n          size=\"lg\"\r\n          variant=\"primary\"\r\n        />\r\n        <Link to={`/machine/${machine.id}/edit`} className=\"btn btn-secondary\">\r\n          Edit Machine\r\n        </Link>\r\n        <button onClick={handleDelete} className=\"btn btn-error\">\r\n          Delete Machine\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineDetail;\r\n","/**\r\n * Utility functions for handling date conversion and formatting\r\n * This ensures consistent date handling across the application\r\n */\r\n\r\n/**\r\n * Safely converts a date value to a Date object\r\n * Handles both Date objects and date strings from IndexedDB\r\n */\r\nexport const toDate = (dateValue: Date | string | undefined | null): Date | null => {\r\n  if (!dateValue) return null;\r\n  if (dateValue instanceof Date) return dateValue;\r\n  return new Date(dateValue);\r\n};\r\n\r\n/**\r\n * Safely formats a date value to a localized date string\r\n * Returns 'Never' for null/undefined values\r\n */\r\nexport const formatDate = (dateValue: Date | string | undefined | null): string => {\r\n  const date = toDate(dateValue);\r\n  if (!date) return 'Never';\r\n  return date.toLocaleDateString();\r\n};\r\n\r\n/**\r\n * Safely formats a date value to a localized date and time string\r\n * Returns 'Never' for null/undefined values\r\n */\r\nexport const formatDateTime = (dateValue: Date | string | undefined | null): string => {\r\n  const date = toDate(dateValue);\r\n  if (!date) return 'Never';\r\n  return date.toLocaleString();\r\n};\r\n\r\n/**\r\n * Formats a date for relative time display (e.g., \"2 hours ago\")\r\n */\r\nexport const formatRelativeTime = (dateValue: Date | string | undefined | null): string => {\r\n  const date = toDate(dateValue);\r\n  if (!date) return 'Never';\r\n  \r\n  const now = new Date();\r\n  const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\r\n  \r\n  if (diffInMinutes < 1) return 'Just now';\r\n  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n  if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n  if (diffInMinutes < 10080) return `${Math.floor(diffInMinutes / 1440)}d ago`;\r\n  return date.toLocaleDateString();\r\n};\r\n\r\n/**\r\n * Formats a date for relative time display in hours (e.g., \"2 hours ago\")\r\n */\r\nexport const formatRelativeTimeHours = (dateValue: Date | string | undefined | null): string => {\r\n  const date = toDate(dateValue);\r\n  if (!date) return 'Never';\r\n  \r\n  const now = new Date();\r\n  const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\r\n  \r\n  if (diffInHours < 1) return 'Just now';\r\n  if (diffInHours < 24) return `${diffInHours}h ago`;\r\n  if (diffInHours < 168) return `${Math.floor(diffInHours / 24)}d ago`;\r\n  return date.toLocaleDateString();\r\n};\r\n","import { AnyDeskLaunchResult } from '../types/machine.types';\r\nimport { indexedDBService } from './indexedDB.service';\r\n\r\nclass AnyDeskService {\r\n  /**\r\n   * Launches AnyDesk with the specified machine ID\r\n   */\r\n  async launchAnyDesk(machineId: string): Promise<AnyDeskLaunchResult> {\r\n    try {\r\n      // Get machine details\r\n      const machine = await indexedDBService.getMachine(machineId);\r\n      if (!machine) {\r\n        return {\r\n          success: false,\r\n          method: 'failed',\r\n          error: 'Machine not found'\r\n        };\r\n      }\r\n\r\n      // Log connection attempt\r\n      await indexedDBService.logConnectionAttempt(machineId, 'launch_attempt');\r\n\r\n      // Try AnyDesk URL scheme first\r\n      const anydeskUrl = `anydesk://${machine.anydeskId}`;\r\n      const fallbackUrl = `https://anydesk.com/${machine.anydeskId}`;\r\n\r\n      try {\r\n        // Attempt to open AnyDesk app\r\n        const opened = await this.openAnyDeskApp(anydeskUrl);\r\n        \r\n        if (opened) {\r\n          // Log successful launch attempt\r\n          await indexedDBService.logConnectionAttempt(machineId, 'launch_success', 'AnyDesk app launched');\r\n          \r\n          return {\r\n            success: true,\r\n            method: 'app'\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.log('AnyDesk app not available, trying web fallback');\r\n      }\r\n\r\n      // Fallback to web version\r\n      try {\r\n        window.open(fallbackUrl, '_blank');\r\n        \r\n        // Log web fallback attempt\r\n        await indexedDBService.logConnectionAttempt(machineId, 'launch_attempt', 'Opened web version');\r\n        \r\n        return {\r\n          success: true,\r\n          method: 'web'\r\n        };\r\n      } catch (error) {\r\n        await indexedDBService.logConnectionAttempt(machineId, 'launch_failure', `Web fallback failed: ${error}`);\r\n        \r\n        return {\r\n          success: false,\r\n          method: 'failed',\r\n          error: 'Failed to open AnyDesk app or web version'\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('AnyDesk launch error:', error);\r\n      \r\n      // Log failure\r\n      await indexedDBService.logConnectionAttempt(machineId, 'launch_failure', `Launch error: ${error}`);\r\n      \r\n      return {\r\n        success: false,\r\n        method: 'failed',\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempts to open AnyDesk application using URL scheme\r\n   */\r\n  private async openAnyDeskApp(url: string): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      // Create a hidden iframe to attempt the URL scheme\r\n      const iframe = document.createElement('iframe');\r\n      iframe.style.display = 'none';\r\n      iframe.src = url;\r\n      \r\n      // Timeout to detect if the app opened\r\n      const timeout = setTimeout(() => {\r\n        document.body.removeChild(iframe);\r\n        resolve(false);\r\n      }, 2000);\r\n\r\n      // Listen for focus events to detect if app opened\r\n      const handleFocus = () => {\r\n        clearTimeout(timeout);\r\n        document.body.removeChild(iframe);\r\n        window.removeEventListener('focus', handleFocus);\r\n        resolve(true);\r\n      };\r\n\r\n      window.addEventListener('focus', handleFocus);\r\n      document.body.appendChild(iframe);\r\n\r\n      // Also try direct window.location as fallback\r\n      try {\r\n        window.location.href = url;\r\n        setTimeout(() => {\r\n          clearTimeout(timeout);\r\n          document.body.removeChild(iframe);\r\n          window.removeEventListener('focus', handleFocus);\r\n          resolve(true);\r\n        }, 1000);\r\n      } catch (error) {\r\n        // Ignore errors, let the iframe method handle it\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if AnyDesk is likely installed on the system\r\n   */\r\n  async checkAnyDeskAvailability(): Promise<boolean> {\r\n    try {\r\n      // Try to detect AnyDesk installation\r\n      // This is a simple heuristic - in reality, we can't reliably detect\r\n      // if AnyDesk is installed without user interaction\r\n      \r\n      // For now, we'll assume it might be available and let the launch attempt determine\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error checking AnyDesk availability:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets AnyDesk download URL for the current platform\r\n   */\r\n  getAnyDeskDownloadUrl(): string {\r\n    const userAgent = navigator.userAgent.toLowerCase();\r\n    \r\n    if (userAgent.includes('windows')) {\r\n      return 'https://anydesk.com/downloads/windows';\r\n    } else if (userAgent.includes('mac')) {\r\n      return 'https://anydesk.com/downloads/macos';\r\n    } else if (userAgent.includes('linux')) {\r\n      return 'https://anydesk.com/downloads/linux';\r\n    } else if (userAgent.includes('android')) {\r\n      return 'https://play.google.com/store/apps/details?id=com.anydesk.anydeskandroid';\r\n    } else if (userAgent.includes('iphone') || userAgent.includes('ipad')) {\r\n      return 'https://apps.apple.com/app/anydesk/id1114002967';\r\n    }\r\n    \r\n    return 'https://anydesk.com/downloads';\r\n  }\r\n\r\n  /**\r\n   * Formats AnyDesk ID for display (adds spaces for readability)\r\n   */\r\n  formatAnyDeskId(id: string): string {\r\n    // Remove any non-numeric characters\r\n    const cleanId = id.replace(/\\D/g, '');\r\n    \r\n    // Add spaces every 3 digits for readability\r\n    return cleanId.replace(/(\\d{3})(?=\\d)/g, '$1 ');\r\n  }\r\n\r\n  /**\r\n   * Validates AnyDesk ID format\r\n   */\r\n  isValidAnyDeskId(id: string): boolean {\r\n    // AnyDesk IDs are typically 9 digits\r\n    const cleanId = id.replace(/\\D/g, '');\r\n    return cleanId.length === 9 && /^\\d+$/.test(cleanId);\r\n  }\r\n\r\n  /**\r\n   * Shows user-friendly message based on launch result\r\n   */\r\n  getLaunchMessage(result: AnyDeskLaunchResult, machineName: string): string {\r\n    if (result.success) {\r\n      if (result.method === 'app') {\r\n        return `AnyDesk app opened for ${machineName}. If the connection doesn't start automatically, enter the ID: ${result.method}`;\r\n      } else if (result.method === 'web') {\r\n        return `AnyDesk web version opened for ${machineName}. You can also download the AnyDesk app for better experience.`;\r\n      }\r\n    }\r\n    \r\n    return `Failed to launch AnyDesk for ${machineName}. ${result.error || 'Please ensure AnyDesk is installed or try again.'}`;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const anydeskService = new AnyDeskService();\r\n","import React, { useState } from 'react';\r\nimport { anydeskService } from '../services/anydesk.service';\r\nimport { AnyDeskLaunchResult } from '../types/machine.types';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport './AnydeskLaunchButton.css';\r\n\r\ninterface AnydeskLaunchButtonProps {\r\n  machineId: string;\r\n  machineName: string;\r\n  anydeskId: string;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  variant?: 'primary' | 'secondary' | 'icon';\r\n  onLaunchResult?: (result: AnyDeskLaunchResult) => void;\r\n  className?: string;\r\n}\r\n\r\nconst AnydeskLaunchButton: React.FC<AnydeskLaunchButtonProps> = ({\r\n  machineId,\r\n  machineName,\r\n  anydeskId,\r\n  size = 'md',\r\n  variant = 'primary',\r\n  onLaunchResult,\r\n  className = ''\r\n}) => {\r\n  const [isLaunching, setIsLaunching] = useState(false);\r\n  const [lastResult, setLastResult] = useState<AnyDeskLaunchResult | null>(null);\r\n\r\n  const handleLaunch = async () => {\r\n    if (isLaunching) return;\r\n\r\n    try {\r\n      setIsLaunching(true);\r\n      setLastResult(null);\r\n\r\n      const result = await anydeskService.launchAnyDesk(machineId);\r\n      setLastResult(result);\r\n      \r\n      if (onLaunchResult) {\r\n        onLaunchResult(result);\r\n      }\r\n\r\n      // Show user feedback\r\n      const message = anydeskService.getLaunchMessage(result, machineName);\r\n      \r\n      if (result.success) {\r\n        // Show success message briefly\r\n        if (result.method === 'web') {\r\n          alert(`✅ ${message}\\n\\n💡 Tip: Download AnyDesk app for better experience!`);\r\n        } else {\r\n          alert(`✅ ${message}`);\r\n        }\r\n      } else {\r\n        // Show error message with download option\r\n        const shouldDownload = window.confirm(`❌ ${message}\\n\\nWould you like to download AnyDesk?`);\r\n        if (shouldDownload) {\r\n          window.open(anydeskService.getAnyDeskDownloadUrl(), '_blank');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Launch error:', error);\r\n      const errorResult: AnyDeskLaunchResult = {\r\n        success: false,\r\n        method: 'failed',\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n      setLastResult(errorResult);\r\n      \r\n      if (onLaunchResult) {\r\n        onLaunchResult(errorResult);\r\n      }\r\n      \r\n      alert(`❌ Failed to launch AnyDesk: ${errorResult.error}`);\r\n    } finally {\r\n      setIsLaunching(false);\r\n    }\r\n  };\r\n\r\n  const getButtonText = () => {\r\n    if (isLaunching) {\r\n      return size === 'sm' ? '...' : 'Launching...';\r\n    }\r\n    \r\n    switch (variant) {\r\n      case 'icon':\r\n        return '🚀';\r\n      case 'secondary':\r\n        return `Connect to ${machineName}`;\r\n      default:\r\n        return 'Launch AnyDesk';\r\n    }\r\n  };\r\n\r\n  const getButtonClass = () => {\r\n    const baseClass = 'anydesk-launch-btn';\r\n    const sizeClass = `anydesk-launch-btn-${size}`;\r\n    const variantClass = `anydesk-launch-btn-${variant}`;\r\n    const stateClass = isLaunching ? 'anydesk-launch-btn-loading' : '';\r\n    const resultClass = lastResult ? `anydesk-launch-btn-${lastResult.success ? 'success' : 'error'}` : '';\r\n    \r\n    return `${baseClass} ${sizeClass} ${variantClass} ${stateClass} ${resultClass} ${className}`.trim();\r\n  };\r\n\r\n  const getButtonIcon = () => {\r\n    if (isLaunching) {\r\n      return <LoadingSpinner size={size === 'sm' ? 'sm' : 'md'} />;\r\n    }\r\n    \r\n    if (lastResult?.success) {\r\n      return '✅';\r\n    }\r\n    \r\n    if (lastResult && !lastResult.success) {\r\n      return '❌';\r\n    }\r\n    \r\n    return '🚀';\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={getButtonClass()}\r\n      onClick={handleLaunch}\r\n      disabled={isLaunching}\r\n      title={`Launch AnyDesk for ${machineName} (ID: ${anydeskId})`}\r\n    >\r\n      <span className=\"anydesk-launch-btn-icon\">{getButtonIcon()}</span>\r\n      <span className=\"anydesk-launch-btn-text\">{getButtonText()}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AnydeskLaunchButton;\r\n"],"names":["copyWithFeedback","async","text","successMessage","arguments","length","undefined","errorMessage","success","navigator","clipboard","window","isSecureContext","writeText","textArea","document","createElement","value","style","position","left","top","body","appendChild","focus","select","successful","execCommand","removeChild","error","console","copyToClipboard","message","isSuccess","toast","className","concat","textContent","Object","assign","right","padding","borderRadius","color","fontWeight","fontSize","zIndex","boxShadow","transform","transition","backgroundColor","maxWidth","wordWrap","setTimeout","contains","showCopyFeedback","PasswordItem","_ref","password","index","isVisible","setIsVisible","useState","_jsxs","children","_jsx","repeat","onClick","title","MachineDetail","id","useParams","navigate","useNavigate","machine","setMachine","loading","setLoading","useEffect","loadMachine","machineData","indexedDBService","getMachine","machineId","LoadingSpinner","size","Link","to","name","anydeskId","AnydeskLaunchButton","machineName","variant","address","formatDate","createdAt","lastAccessed","connectionCount","notes","passwords","map","tags","tag","categories","category","confirm","deleteMachine","toDate","dateValue","Date","date","toLocaleDateString","formatRelativeTime","now","diffInMinutes","Math","floor","getTime","formatRelativeTimeHours","diffInHours","anydeskService","launchAnyDesk","method","logConnectionAttempt","anydeskUrl","fallbackUrl","this","openAnyDeskApp","log","open","Error","url","Promise","resolve","iframe","display","src","timeout","handleFocus","clearTimeout","removeEventListener","addEventListener","location","href","checkAnyDeskAvailability","getAnyDeskDownloadUrl","userAgent","toLowerCase","includes","formatAnyDeskId","replace","isValidAnyDeskId","cleanId","test","getLaunchMessage","result","onLaunchResult","isLaunching","setIsLaunching","lastResult","setLastResult","getButtonClass","sizeClass","variantClass","stateClass","resultClass","trim","alert","errorResult","disabled","getButtonText"],"sourceRoot":""}